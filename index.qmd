---
title: "Reproducibility and Replicability in Geospatial Data Science"
subtitle: |

  [{{< fa brands github >}} Source](https://github.com/nickbearman/reproducibility-replicability-gds-penn) |
  [{{< fa brands chrome >}} Slides]()

  [![License: CC BY 4.0](https://img.shields.io/badge/License-CC_BY_4.0-lightgrey.svg)](https://creativecommons.org/licenses/by/4.0/)
authors:
  - id: bearman
    name:
      given: Nick
      family: Bearman
      literal: Nick Bearman
    url: https://nickbearman.me.uk
    email: nick@nickbearman.com
    orcid: 0000-0002-8396-4061
    attributes:
      corresponding: boolean
      equal-contributor: true
date: "2024-04-18"
date-format: long
from: markdown+emoji
format:
  revealjs:
    theme: [default, custom.scss]
    preview-links: auto
    transition: none
    transition-speed: fast
    slide-number: "c/t"
    link-external-newwindow: true
    overview: true
    menu: true
    chalkboard: true
    mutliplex: false
---

<!-- Begin: Intro (to FAIR) - NICK -->

## Outline

::: {.fragment}

- What is reproducibility and replicability?

- Summarise FAIR principles and reproducible research (Nick)
- Talk about Quarto, one tool in your toolkit (Unai)
- Make a presentation in Quarto (Nick & you)
- Compare PowerPoint and Quarto (Jan)
- Demo creating and updating slides in realtime using GitHub Actions (Jan)
- Questions (you)

:::

::: {.fragment}

### Learning objectives 

- Understand what reproducibility and replicability are
- Know why they are useful
- Be aware of some of the tools that you can use 

:::

## What is Reproducibility?

- Ability for other people *with a similar level of skill* to reproduce your work. 

- Other people
  - colleagues in company, 
  - group members in a project,
  - yourself in a year when you want to use your project work for something else,

- Fundamental part of research

- Also is best practice - which will allow others to reproduce your work. 

## Why do it?

- We need to have confidence that our research is good quality and we are doing good science

- Peter Fisher, Uni of Leicteser UK (1993) compared seven different pieces of GIS software doing a viewshed analysis

- and got seven (slightly) different results!

![](images/fisher-1993-fig8.png)

## Why do it?
 
- Fisher also discovered a major error in one piece of software which gave completely incorrect results.

- Highlights the need for:

  - Standards & testing to make sure this doesn't happen
  - Algorithms used to be published so people can see what is happening
  - Issues when only binary files are available, and not the source code

Fisher, P. F. (1993). Algorithm and implementation uncertainty in viewshed analysis. International Journal of Geographical Information Systems, 7(4), 331–347. https://doi.org/10.1080/02693799308901965

## Why do it?

- Riggs & Dean, Colorado State (2007) did a similar investigation on viewshed analysis

- Things have improved since 1993, but there are still differences in different software. 

Riggs, P.D. and Dean, D.J. (2007), An Investigation into the Causes of Errors and Inconsistencies in Predicted Viewsheds. Transactions in GIS, 11: 175-196. https://doi.org/10.1111/j.1467-9671.2007.01040.x

## Why do it?

- Standards & testing to make sure this doesn't happen
  - OGC
  - But we probably do need more testing
  
- Algorithms used to be published so people can see what is happening
  - Publish algorithms in journals
  - Even more important with machine learning - transparency is important
  
- Issues when only binary files are available, and not the source code
  - Growth in open source software - so you can see (and unpick) what is happening


## What is Reproducibility & Replicability?

*"\[...\] when the same analysis steps performed on the same dataset
\[...\] produce the same answer."* ([Turing
Way](https://the-turing-way.netlify.app/reproducible-research/overview/overview-definitions))

![[by Scriberia for The Turing Way community (CC-BY
4.0)](https://zenodo.org/record/3678226/files/ReproducibleDefinitionGrid.jpg?download=1)](https://zenodo.org/record/3678226/files/ReproducibleDefinitionGrid.jpg?download=1){width="50%"
fig-align="center"}


## How do we make our research reproducible? - **FAIR**:

::: columns
:::: {.column width="50%"}


**Findable**

- Descriptive metadata and persistent identifier (DOI)

**Accessible**

- Code/data could be openly available OR access via authentication and if needed

**Interoperable**

- Data needs to be integrated with other data and interoperate with applications or workflows (Open formats)

**Reusable**

- Documentation and license (Open license - e.g. Creative Commons)


::::

:::: {.column width="50%"}


![[by Scriberia for The Turing Way community (CC-BY
4.0)](https://zenodo.org/record/3678226/files/FAIRPrinciples.jpg?download=1)](https://zenodo.org/record/3678226/files/FAIRPrinciples.jpg?download=1){width="80%"
fig-align="center"}


::::

:::

## Research

- Some journals & conferences ask you to submit code along with your paper

- AGILE - https://reproducible-agile.github.io/

- Anyone (with a similar level of skills) should be able to do reproduce your research and benefit from it. 

- One reason for open source tools.
	
- If you do analysis in ArcGIS Pro, you need ArcGIS Pro to recreate that analysis. 
	
- If you don't have ArcGIS Pro, what do you do?


## It's not just research

Other work can be useful if it can be reproducible:

- quarterly or annual reports

- repeating work over 200 areas, 50 business units, 365 days,

- coming back to your work 6 months later - "please can you update this with this new data?"


## How do we do this?

- Documenting what you did is standard - Methods

- If you can do what you did in a script, then you can also share this

- ArcGIS Pro / QGIS
  - graphical interface, click buttons, etc
  
- R / Python
  - write out the script

## Setup - "environments"

- To replicate a piece of work, you need to know what software they used

- What version

- What libraries / packages

- What version of libraries or packages

- Can record this in text
  - "R 4.3.2, RStudio 2013.12.0, sf library 1.0-16" etc.  

- Or in code
  - renv library https://rstudio.github.io/renv/articles/renv.html
  
## Setup - Docker

- Docker gives you a big box to put all this in

- Then you say - I used this Docker environment

- AGILE has a very nice overview

## Version Control

- If your project evolves over time, you may need to use version control

- Provides a snapshot of your code at a specific point in time - I used this version of my code

- Version Control (Git) allows you to do this, while still developing your code, and to see the differences (diff). 

- GitHub allows you to collaborate with other people on this.


## Writing, Presentations

Also works for writing and presentations as well.

- Markdown allows you to write plan text with tags - stars, hashes, etc.

- Can also do analysis in this

- LaTeX is a developved version of Markdown (or Markdown is a simple version of LaTeX)

- RMarkdown allows you to run R code

- Quarto allows you to run other code (Python, R, etc.)

- This presentation is written in Quarto.


## Markdown example


| Syntax |  Output       |
|------------------|-----------------------|
| `*Italic*`       | *Italic*              |
| `**Bold**`       | **Bold**              |
| `~~strikethrough~~`     | ~~strikethrough~~    |
| `[Link](url)`    | [Link](https://example.com) |
| `i\hbar \frac{\partial \Psi}{\partial t} = -\frac{\hbar^2}{2m} \nabla^2 \Psi + V(\mathbf{r},t) \Psi` | $i\hbar \frac{\partial \Psi}{\partial t} = -\frac{\hbar^2}{2m} \nabla^2 \Psi + V(\mathbf{r},t) \Psi$|



## Markdown example

- Markdown allows you to write plan text with tags - stars, hashes, etc. 

````{.markdown}
---
title: "My document"
format: html
---
. . .
# Introduction

*Hello Quarto!*

```{{r}}
summary(cars)
```
````

## Rendered Output

![](images/rendering-output.png)

## About Quarto

-   [Quarto](https://quarto.org/) is a new, open-source, scientific and
    technical publishing system
-  Combine text and code to produce formatted documents
-   Publish reproducible and dynamic presentations, dashboards, websites, blogs, and books
    in HTML, PDF, MS Word, etc.
-   Multi-language support for R, Python, Julia, and more
-   Quarto extends [RMarkdown](https://rmarkdown.rstudio.com/) and
    shares similarities with [Juypter Notebooks](https://jupyter.org/).

![[Artwork from "Hello, Quarto" keynote by Julia Lowndes and Mine Çetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst.](https://allisonhorst.com/cetinkaya-rundel-lowndes-quarto-keynote)](https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/c2ef45f1-4a68-4c7a-a43f-bdcf0f90e104_rw_3840.png?h=783eba914284e5adfb9feadcf4ba5f1e){width=70%}

## Formats

- **Documents**: HTML, PDF, MS Word, Open Office, ePub
- **Presentations**: Revealjs, PowerPoint, 
- **Wikis**: MediaWiki, JiraWiki, ...
- Many templates exist for academic documents: [quarto-journals](https://github.com/quarto-journals/)
- And much more: Jupyter, RTF, InDesign, ...


::: columns
::: {.column width="30%"}
![[taken from quarto-journals](https://github.com/quarto-journals/)](images/journal.png)
:::
::: {.column width="30%"}
![[taken from quarto gallery](https://quarto.org/docs/gallery/)](images/presentations-penguins-story.png)
:::
::: {.column width="30%"}
![[taken from quarto gallery](https://quarto.org/docs/gallery/)](images/books-mlr3book.png)
:::
:::



## How does Quarto work?


![taken from [What is Quarto - A Quick Intro FAQ](https://github.com/jansim/tea-talk-quarto/tree/main)](images/quarto.png)

## .qmd

![[qmd file](https://quarto.org/docs/get-started/hello/rstudio.html)](images/rstudio-hello.png)

## .ipynb

![[jupyter notebook](https://quarto.org/docs/get-started/hello/jupyter.html)](images/jupyter-quarto-preview.png)

## Tools
::: columns
::: {.column width="20%"}
![](images/jupyter.svg.png)
![](images/vsc.svg.png)
![](images/rs.svg.png)
:::
::: {.column width="70%"}
::: {.fragment}
![](images/text-editor-quarto-preview.png)
````bash
$ quarto render hello.qmd --to doxc
````
:::
:::
:::




## Markdown text


| Syntax |  Output       |
|------------------|-----------------------|
| `*Italic*`       | *Italic*              |
| `**Bold**`       | **Bold**              |
| `~~strikethrough~~`     | ~~strikethrough~~    |
| `[Link](url)`    | [Link](https://example.com) |
| `i\hbar \frac{\partial \Psi}{\partial t} = -\frac{\hbar^2}{2m} \nabla^2 \Psi + V(\mathbf{r},t) \Psi` | $i\hbar \frac{\partial \Psi}{\partial t} = -\frac{\hbar^2}{2m} \nabla^2 \Psi + V(\mathbf{r},t) \Psi$|



## Code chunks


```{r, echo = TRUE}
data(iris)

plot(iris$Sepal.Length, iris$Sepal.Width, 
     main = "Scatter Plot of Sepal Length vs Sepal Width",
     xlab = "Sepal Length (cm)",
     ylab = "Sepal Width (cm)",
     pch = 16, col = iris$Species)

```

## Code chunks

::: {.fragment}
````{.markdown}
```{{r}}
#| label: "iris-plot"
#| echo: TRUE
#| fig-format: svg
#| cache: TRUEs

data(iris)

plot(iris$Sepal.Length, iris$Sepal.Width, 
     main = "Scatter Plot of Sepal Length vs Sepal Width",
     xlab = "Sepal Length (cm)",
     ylab = "Sepal Width (cm)",
     pch = 16, col = iris$Species)

```
````
defaults to *knitr* engine (you can override the engine with `engine: jupyter`)
:::

::: {.fragment}

````{.markdown}
```{{python}}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```
````

defaults to *jupyter* engine
:::

::: {.fragment}
You can use Python and R code together using the `reticulate` package
:::

## Quarto Showcase


:::: columns
::: {.column width="50%"}

**Fragments**

::: {.fragment}
Fade in
:::

::: {.fragment .fade-out}
Fade out
:::

::: {.fragment .highlight-red}
Highlight red
:::

::: {.fragment .fade-in-then-out}
Fade in, then out
:::

::: {.fragment .fade-up}
Slide up while fading in
:::

:::

::: {.column width="50%"}
::: {.panel-tabset}
### Tab
Hello...

### Set
...World"
:::
:::

::::

## Quarto Showcase

```{ojs}
//| panel: input
viewof bill_length_min = Inputs.range(
  [32, 50], 
  {value: 35, step: 1, label: "Bill length (min):"}
)
viewof islands = Inputs.checkbox(
  ["Torgersen", "Biscoe", "Dream"], 
  { value: ["Torgersen", "Biscoe"], 
    label: "Islands:"
  }
)
```

::: {.panel-tabset}

## Plot

```{ojs}
Plot.rectY(filtered, 
  Plot.binX(
    {y: "count"}, 
    {x: "body_mass_g", fill: "species", thresholds: 20}
  ))
  .plot({
    facet: {
      data: filtered,
      x: "sex",
      y: "species",
      marginRight: 80
    },
    marks: [
      Plot.frame(),
    ]
  }
)
```

## Data

```{ojs}
Inputs.table(filtered)
```

:::

```{ojs}
data = FileAttachment("palmer-penguins.csv").csv({ typed: true })
```

```{ojs}
filtered = data.filter(function(penguin) {
  return bill_length_min < penguin.bill_length_mm &&
         islands.includes(penguin.island);
})
```

# When to use Quarto? {background-opacity="0.7" background-image="images/dalle3/scale.jpeg"}

##  Strengths & Weaknesses of Quarto *for slides*

:::: {.columns}

::: {.column .fragment width="50%"}

**Strengths** 💪

- Consistency in Output
  - Focus on content
- Support for (Explicit) Version Control (e.g. git)
- Great for Code (in Slides)
- Automation / Generated Contents
- Interactivity

:::

::: {.column .fragment width="50%"}

**Weaknesses** 😢

- Harder to do fine layouting
  - No WYSIWYG
- New Syntax to learn
- Software Maturity

:::

::::

## Key Benefit: (Explicit) Version Control {{< fa code-compare >}}

:::: {.columns}

::: {.column width="50%"}
![[by Scriberia for The Turing Way community (CC-BY 4.0)](https://zenodo.org/record/3695300/files/VersionControl.jpg?download=1)](images/turingway/VersionControl.jpg){width=80% fig-align="center"}
:::

::: {.column .fragment width="50%"}

- Going back through time
- Great for collaboration
- Allow sharing and adaptation
  - Just like [this presentation](https://github.com/nickbearman/reproducibility-replicability-gds-penn)
- Allows automation

:::

::::


### Practice what you preach!

By setting up your teaching materials in a reproducible manner, you demonstrate the value of reproducibility directly

- Useful for others
- Useful for future you when you teach this course again


## Reproducible training materials are beneficial to us!

- *I used some slides from a workshop I took part in on reproducible materials, which we developed:*



::: columns
::: {.column width="20%"}
![](https://avatars.githubusercontent.com/u/6410645?v=4)

#### [Nick Bearman](mailto:nick@nickbearman.com)

{{< fa brands github >}} [GitHub](https://github.com/nickbearman)<br>
:::

::: {.column width="20%"}
![](https://avatars.githubusercontent.com/u/83285979?v=4)

#### [Unai Fischer Abaigar](mailto:Unai.FischerAbaigar@stat.uni-muenchen.de)

{{< fa brands github >}} [GitHub](https://github.com/unai-fa)<br>
:::

::: {.column width="20%"}
![](https://avatars.githubusercontent.com/u/7115629?v=4)

#### [Jan Simson](mailto:hi@simson.io)

{{< fa brands github >}} [GitHub](https://simson.io)<br>
:::

::: {.column width="40%"}
{{< fa image >}} **Images:** [Scriberia with The Turing Way
community](https://doi.org/10.5281/zenodo.3332807) (License: [CC BY
4.0](https://creativecommons.org/licenses/by/4.0/))

:computer: **Slides:** Slides are publicly available at
[github.com/jansim/dra-reproducible-materials](https://github.com/jansim/dra-reproducible-materials)

:package: **Software:** Reproducible slides build with
[Quarto](https://quarto.org/) and deployed to [GitHub
Pages](https://pages.github.com/) using [GitHub
Actions](https://github.com/features/actions) (details in the [Quarto
docs](https://quarto.org/docs/publishing/github-pages.html))

{{< fa brands github >}} **Source:** Source code is available at
[github.com/jansim/dra-reproducible-materials](https://github.com/jansim/dra-reproducible-materials)

:trackball: **DOI:** [![DOI](https://zenodo.org/badge/754060284.svg)](https://zenodo.org/doi/10.5281/zenodo.10652968)
(generated using GitHub + [Zenodo](https://zenodo.org/), see [GitHub
docs](https://guides.github.com/activities/citable-code/))

{{< fa scale-balanced >}} **License:** Creative Commons Attribution 4.0
International ([CC BY
4.0](https://creativecommons.org/licenses/by/4.0/))

:speech_balloon: **Contact:** We welcome any feedback via
[email](mailto:nick@nickbearman.com,Unai.FischerAbaigar@stat.uni-muenchen.de,hi@simson.io) or
[GitHub
issues](https://github.com/jansim/dra-reproducible-materials/issues). Thank
you!
:::
:::

## Reproducible training materials are beneficial to us!

::: columns
- *We used the [Reproducible and FAIR Teaching Materials](https://osf.io/gj6hd) slides from the Aug 2023 Train the Trainer programme*
- **Thank you** very much to Esther Plomp and Lennart Wittkuhn :pray: whose [Quarto](https://github.com/jansim/dra-reproducible-materials) slides we used and developed!

::: {.column width="30%"}

![](https://avatars.githubusercontent.com/u/46314469?v=4)

#### Esther Plomp

{{< fa envelope >}} [e.plomp@tudelft.nl](mailto:e.plomp@tudelft.nl)<br>
{{< fa home-user >}} [estherplomp.github.io](https://estherplomp.github.io/)<br>
{{< fa brands github >}} [GitHub](https://github.com/EstherPlomp)<br>
{{< fa brands mastodon >}} [Mastodon](https://scholar.social/@toothFAIRy)

:::

::: {.column width="30%"}
![](https://avatars.githubusercontent.com/u/42233065?v=4)

#### Lennart Wittkuhn

{{< fa envelope >}} [lennart.wittkuhn@uni-hamburg.de](mailto:lennart.wittkuhn@uni-hamburg.de)<br>
{{< fa home-user >}} [lennartwittkuhn.com](https://lennartwittkuhn.com/)<br>
{{< fa brands github >}} [GitHub](https://github.com/lnnrtwttkhn)<br>
{{< fa brands mastodon >}} [Mastodon](https://fediscience.org/@lnnrtwttkhn)<br>

:::
::: {.column width="40%"}

![[by Scriberia for The Turing Way community (CC-BY
4.0)](https://zenodo.org/record/5706310/files/recognition.jpg?download=1)](https://zenodo.org/record/5706310/files/recognition.jpg?download=1){width="80%"
fig-align="center"}

:::
:::


## Additional Resources

- [The Turing Way handbook to reproducible, ethical and collaborative data science](https://the-turing-way.netlify.app)
- Richard McElreath (2020). [Science as amateur software development](https://www.youtube.com/watch?v=zwRdO9_GGhY). YouTube
- Quarto
  - [Quarto Documentation](https://quarto.org/docs/guide/)
  - [Quarto for Academics](https://quarto.org/docs/blog/posts/2023-05-22-quarto-for-academics/) by Mine Çetinkaya-Rundel
- Version Control
  - [Version Control Book](https://lennartwittkuhn.com/version-control-book)
  - https://github.com/git-guides

## Thank you! :pray:

::: columns
::: {.column width="20%"}
![](https://avatars.githubusercontent.com/u/6410645?v=4)

#### [Nick Bearman](mailto:nick@nickbearman.com)

{{< fa brands github >}} [GitHub](https://github.com/nickbearman)<br>
:::

::: {.column width="40%"}
{{< fa image >}} **Images:** [Scriberia with The Turing Way
community](https://doi.org/10.5281/zenodo.3332807) (License: [CC BY
4.0](https://creativecommons.org/licenses/by/4.0/))

:computer: **Slides:** Slides are publicly available at
[github.com/jansim/dra-reproducible-materials](https://github.com/jansim/dra-reproducible-materials)

:package: **Software:** Reproducible slides build with
[Quarto](https://quarto.org/) and deployed to [GitHub
Pages](https://pages.github.com/) using [GitHub
Actions](https://github.com/features/actions) (details in the [Quarto
docs](https://quarto.org/docs/publishing/github-pages.html))

{{< fa brands github >}} **Source:** Source code is available at
[Github.com/nickbearman/reproducibility-replicability-gds-penn](https://github.com/nickbearman/reproducibility-replicability-gds-penn)

{{< fa scale-balanced >}} **License:** Creative Commons Attribution 4.0
International ([CC BY
4.0](https://creativecommons.org/licenses/by/4.0/))

:speech_balloon: **Contact:** We welcome any feedback via
[email](mailto:nick@nickbearman.com) or
[GitHub
issues](https://github.com/nickbearman/reproducibility-replicability-gds-penn/issues). Thank
you!
:::

::: {.column width="20%"}

## Questions ?

:::
:::
